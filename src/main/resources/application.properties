kogito.persistence.auto.ddl=true

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/kogito
quarkus.datasource.jdbc.max-size=5

quarkus.native.native-image-xmx=2260M
quarkus.native.container-build=false
quarkus.swagger-ui.always-include=true
quarkus.http.limits.max-body-size=300M

spring.jackson.mapper.accept-case-insensitive-properties=true

### Required by dev-ui ?
quarkus.http.cors=true

quarkus.devservices.enabled=false

kogito.service.url=http://localhost:8080
kogito.dataindex.http.url=http://localhost:8180
kogito.dataindex.ws.url=ws://localhost:8180

quarkus.log.category."org.apache.http".level=DEBUG

kafka.bootstrap.servers=localhost:9092

#Actions Executed Start
mp.messaging.incoming.actions_executed.connector=quarkus-http
mp.messaging.incoming.actions_executed.path=/actions_executed
mp.messaging.incoming.actions_executed.method=POST
#Actions Executed End

mp.messaging.incoming.handling_unit_released_event.connector=quarkus-http
mp.messaging.incoming.handling_unit_released_event.path=/handling_unit_released_event
mp.messaging.incoming.handling_unit_released_event.method=POST

mp.messaging.incoming.handling_unit_canceled_event.connector=quarkus-http
mp.messaging.incoming.handling_unit_canceled_event.path=/handling_unit_canceled_event
mp.messaging.incoming.handling_unit_canceled_event.method=POST

mp.messaging.incoming.manually_resolved_process_event.connector=quarkus-http
mp.messaging.incoming.manually_resolved_process_event.path=/manually_resolved_process
mp.messaging.incoming.manually_resolved_process_event.method=POST

mp.messaging.outgoing.start.connector=quarkus-http
mp.messaging.outgoing.start.url=${K_SINK:http://localhost:8080/start}
mp.messaging.outgoing.start.method=POST

mp.messaging.incoming.new_exception_event_type.connector=quarkus-http
mp.messaging.incoming.new_exception_event_type.path=/start
mp.messaging.incoming.new_exception_event_type.method=POST

#Actions Executed
mp.messaging.incoming.action_executed_exceptionstore_create.connector=quarkus-http
mp.messaging.incoming.action_executed_exceptionstore_create.path=/action_executed_exceptionstore_create
mp.messaging.incoming.action_executed_exceptionstore_create.method=POST

mp.messaging.incoming.action_executed_crs_cancelreservation.connector=quarkus-http
mp.messaging.incoming.action_executed_crs_cancelreservation.path=/action_executed_crs_cancelreservation
mp.messaging.incoming.action_executed_crs_cancelreservation.method=POST

mp.messaging.incoming.action_executed_exceptionstore_resolve.connector=quarkus-http
mp.messaging.incoming.action_executed_exceptionstore_resolve.path=/action_executed_exceptionstore_resolve
mp.messaging.incoming.action_executed_exceptionstore_resolve.method=POST

mp.messaging.incoming.action_executed_exceptionstore_update.connector=quarkus-http
mp.messaging.incoming.action_executed_exceptionstore_update.path=/action_executed_exceptionstore_update
mp.messaging.incoming.action_executed_exceptionstore_update.method=POST

mp.messaging.incoming.action_executed_supporthub_createdamageticket.connector=quarkus-http
mp.messaging.incoming.action_executed_supporthub_createdamageticket.path=/action_executed_supporthub_createdamageticket
mp.messaging.incoming.action_executed_supporthub_createdamageticket.method=POST

## metadata
mp.messaging.outgoing.kogito-processinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-processinstances-events.topic=kogito-processinstances-events
mp.messaging.outgoing.kogito-processinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.outgoing.kogito-usertaskinstances-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.kogito-variables-events.connector=smallrye-kafka
mp.messaging.outgoing.kogito-variables-events.topic=kogito-variables-events
mp.messaging.outgoing.kogito-variables-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

kogito.persistence.type=jdbc
kogito.persistence.proto.marshaller=true

kogito.persistence.auto.ddl=true

quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.log.bind-parameters=true
quarkus.hibernate-orm."persistence-unit-name".log.sql=true

quarkus.log.level=INFO
